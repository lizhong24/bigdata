一、scala简介
	官网：https://www.scala-lang.org/
	Scala语言很强大，集成了面向对象和函数式编程的特点。
	运行在JVM（jdk）。
	大数据中为什么学习scala?
	spark是scala语言编写。
	python写spark 挺好的
	java写spark 很糟糕(代码实在是太多了)
	scala写spark 很完美
	
二、scala特点
	1）优雅
	框架设计中第一个要考虑的问题就是API是否优雅。
	精简的封装。
	代码精简（少）。
	2）速度快
	scala语言表达能力强。
	一行代码=多行java代码，开发速度快。
	3）完美融合hadoop生态
	scala是静态编译，表达能力强并且代码量少。

三、安装Scala
	1）下载scala-2.11.8.zip
	2）解压到E:\temp\目录下
	3）配置环境变量
	SCALA_HOME=E:\temp\scala-2.11.8
	PATH中加入%SCALA_HOME%\bin;

四、Scala基础语法
	1）Scala程序的开始HelloWorld
	object HelloWorld {
		def main(args: Array[String]): Unit = {
			println("Hello, world!")
		}
	}
	
	2）Scala的数据类型
	Scala与java一样，有8种数值类型：
	Byte/Char/Short/Int/Long/Float/Double/Boolean/
	和Unit类型(void)
	注意：scala中无包装类型。
	Unit：表示无值，用于不返回任何结果的方法的结果类型。
	
	3）Scala定义变量
	两个关键字：val var
	val:定义变量值不可变
	var:定义的变量值是可变的
	scala编译器会自动的推断类型！
	指定类型： val str:String = "Hello World"
	注意：类型要保持一致
	Unit = ()：()相当于什么都没有用()表示。
	
	4）条件表达式
	if:判断
	val y = if(x>0) 1 else 2
	
	scala> val z = if(x>0) "error" else 1
	z: Any = error
	
	Any:包含Anyval和AnyRef
	Anyval:包含scala所有类型
	AnyRef：Scala classes与Java Classes
	Any相当于java的Object
	val k = if(x<0) 0 else if(x>=1) 1 else -1
	if和else if:多个条件的判断，符合条件看左侧，不符合条件看右侧
	
	5）块表达式
	在scala中{}包含一系列表达式，块中的最后一个表达式的值就是块的值
	例如：
	def main(args: Array[String]): Unit = {
		//块表达式
		val a = 1

		val rs = {
			if(a > 2){
				1
			}else if (a < 2){
				-1
			}else{
				0
			}
		}
		println(rs)
	}
	
	6）循环
	yield:生成一个新的集合关键字
	1.to(10).map(_*1000)
	map:取出元素
	_:代表元祖
	
五、方法定义
	Scala中 + - * / % 的作用和Java一样，但是特别的是，这些操作符实际上是方法。
	1 to 10
	1.to(10)
	
	def m2(a:Int,b:Int): Int = a * b
	
	def m1(a:Int,b:Int):Int = {
		a + b
	}
	def:定义方法的关键字
	m1:方法名
	a:参数列表
	b:参数列表
	Int:返回值类型
	a + b:函数体

六、函数
	1）方式1
	方法转换为函数
	方式:方法名 _
	res6: (Int, Int) => Int = <function2>
	<function2>
	代表一个函数，并且有两个参数。
	(Int, Int)
	代表参数列表
	Int
	代表返回值类型
	=>
	代表函数
	
	2）方式2
	定义函数：
	val h1 = (a:Int,b:Int) => {a * b}
	h1:函数名
	(a:Int,b:Int)：函数的参数类型
	{a * b}：函数体

七、传值调用&传名调用
	函数式编程：方法的参数可以是一个函数
	传值调用：
	1.先计算balance的值
	2.把这个值作为参数传递给printMoney
	传名调用：传递的是函数
	将balance方法的名称传递到方法内部执行

八、可变参数函数
	java中的可变参数：public static void m1(String ...arg){}
	scala中的可变参数：def sum(ints:Int*): Int ={}
	加了通配符*

九、默认参数值函数
	如果传递了参数，则使用传递的值。如果不传递参数，则使用默认值。

十、高阶函数
	定义：将其他函数作为参数，或者其结果是函数的函数。

十一、部分参数应用函数
	如果函数传递所有预期的函数，则表示完全应用它了。
	如果只传递几个参数，并不是全部参数，那么将返回部分应用的函数。

十二、字符串的格式化输出
	文字插值器：f/s

十三、柯理化
	指的是将原来接收的两个参数的函数变为一个新的接收一个参数的函数，这样的一个过程。
	函数的通用性降低，但是适用性提高

十四、偏函数
	被包在花括号内没有match的一组case语句的是一个偏函数。
	PartialFunction[A,B]
	A: 参数类型
	B：返回类型
	常用与模式匹配。
	